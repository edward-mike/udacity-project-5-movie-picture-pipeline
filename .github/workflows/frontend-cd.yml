# https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions

name: 👨‍💻☁️Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - master


env:
  IMAGE_TAG: latest
  REPO_NAME: frontend
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  EKS_CLUSTER : udacity-project4
  AWS_REGION: us-east-1


jobs:
  Linting:
    runs-on: ubuntu-latest
    environment: Development Environment

    steps:
    - name: 📂Checkout branch
      uses: actions/checkout@v4

    - name: 🚀Install Node.js 
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: 📦Install Dependencies
      working-directory: starter/frontend
      run: npm ci

    - name: 🔍Run Lint
      run: cd starter/frontend && npm run lint

      
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: 📂Checkout branch
      uses: actions/checkout@v4

    - name: 🚀Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
        
    - name: 📦Install Dependencies
      working-directory: starter/frontend
      run: npm ci
  
    - name: 🧪Run Test
      run: cd starter/frontend && npm run test


  Build:
    needs: [Linting, Test]
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂Checkout branch
      uses: actions/checkout@v4
    
    - name: 🚀Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    - name: 🔑Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
  
    - name: 🔓Login to Amazon 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: 🐳 Build and Push Docker Image to AWS ECR ☁️
      working-directory: starter/frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}:${IMAGE_TAG}
    
    - name: Configure Kubeconfig
      run:
       aws eks update-kubeconfig --name ${EKS_CLUSTER} --region ${AWS_REGION}

    - name: 🚀Deploy Docker Image to Amazon EKS ☁️
      working-directory: starter/frontend/k8s
      run: |
          kustomize edit set image frontend=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPO_NAME}:${IMAGE_TAG}
          kustomize build | kubectl apply -f -
